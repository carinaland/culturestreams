{"version":3,"sources":["webpack:///./src/app/features/browse/browse-routing.module.ts","webpack:///./src/app/features/browse/browse.component.ts.BrowseComponent.html","webpack:///./src/app/features/browse/browse.component.ts","webpack:///./src/app/features/browse/browse.module.ts","webpack:///./src/app/features/browse/components/event-detail/event-detail.component.html","webpack:///./src/app/features/browse/components/event-detail/event-detail.component.ts","webpack:///./src/app/features/browse/components/event-overview/event-overview.component.html","webpack:///./src/app/features/browse/components/event-overview/event-overview.component.ts","webpack:///./src/app/features/browse/pages/calendar/calendar.component.html","webpack:///./src/app/features/browse/pages/calendar/calendar.component.ts","webpack:///./src/app/features/browse/pages/channels/channels.component.html","webpack:///./src/app/features/browse/pages/channels/channels.component.ts","webpack:///./src/app/features/browse/pages/event/event.component.ts.EventComponent.html","webpack:///./src/app/features/browse/pages/event/event.component.ts","webpack:///./src/app/shared/directives/image-preload.directive.ts","webpack:///./src/app/shared/pipes/date.pipe.ts","webpack:///./src/app/shared/pipes/text.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEF;AAEmB;AACT;AACS;AAExE,IAAM,YAAY,GAAW;IAC3B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAG,iEAAe;QACrC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;YACrD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2EAAc,EAAE;YAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,oFAAiB,EAAE;YAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oFAAiB,EAAE;SACnD;KACF;CACF,CAAC;AAEF;IAAA;IAKmC,CAAC;IAAD,0BAAC;AAAD,CAAC;;AAC7B,IAAM,uBAAuB,GAAG;IACrC,iEAAe;IACf,oFAAiB;IACjB,oFAAiB;IACjB,2EAAc;CACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGC/BD,8lBAAe;;;;;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAkD;AAElD;IAME;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IAEH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAAA;IAc4B,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0GCrBzB;;;;;;8oDAMY,iDAAZ,oBAAW,EANX,YAMY,EAAZ,SAAW,GADX,kBAAY,EALZ,YAMY,EADZ,SAAY,GAHZ,2GAAuB,GACvB,gEAAwD,EAFxD,6BAAmB,EADnB,YAMY,EAJZ,SAAuB,EACvB,SAAwD,EAFxD,SAAmB,mDAGnB,yIAAiD,GAJjD,mLAMY,EAFZ,SAAiD,EAJjD,oBAMY;0GAEV,mpDAIY,yBAAZ,oBAAW,EAJX,YAIY,EAAZ,SAAW,GADX,kBAAY,EAHZ,YAIY,EADZ,SAAY;0GAYV,0TAA8B,IAC5B,sHAAI,gZAA0B;0GAG9B,wHAA6B,uMAAqB;0GAoClD,0JAAwE,KACtE,sIAAsG,IAAnG,0PAAkG,IAErG,6IAAuB,KACrB,+LAA4C,YAAzC;;wBAAsB;MAAzB,wBAA4C,KAC1C,wHAAM,gFAA8C,MACpD,06BAAqD,6EAAuD,2BAA5G,YAAqD,mDALtD,gWAAkG,KAArG,YAAsG,EAAnG,SAAkG,GAI3F,wFAA8C,GACpD,2XAAqD,qGAAuD;0GAKhH,yJAAmC,KACjC,sIAAmC,wDAAhC,mBAA+B,oBAAlC,YAAmC,EAAhC,SAA+B;0GAMpC,sHAAqC,6IACG,0HAAI,KAC1C;;;;;;;;;mqDACoB,oFACpB,MAAW,wIACX;;;;;;;;;qqDACkB,8EAClB,MAAW,0IACb,yBANE,YACoB,GADV,wBAAmB,EAA7B,YACoB,EADV,SAAmB,GAG7B,aACkB,GADR,sBAAiB,EAA3B,aACkB,EADR,SAAiB,mDALQ,gOACG,GACtC,2XACoB,GACT,iOACX,mYACkB,GACP,kOACb;0GAEE,sHAAG,KACD;;;;;;;;;8rDAE2B,mFAAU,MAAW,wIACF,0HAAI,KAClD;;;;;;;;;+rDAE2B,6EAAI,MAAW,2IAE5C,yBARE,YAE2B,GAA3B,uBAA0B,EAFhB,wBAAmB,EAA7B,YAE2B,EAA3B,SAA0B,EAFhB,SAAmB,GAI7B,YAE2B,GAA3B,uBAA0B,EAFhB,sBAAiB,EAA3B,aAE2B,EAA3B,SAA0B,EAFhB,SAAiB,mDAJ3B,2XAE2B,GAAqB,wOACF,GAC9C,2XAE2B,GAAe,yOAE5C;2GASN;;;inBAAsF,mFAAU,m3BAAU,mFAAU,2BAApB,YAAU,mDAAzE,0GAAqB,GAAtD,seAAsF,EAArD,SAAqB,EAAtD,0CAAsF,GAAU,2XAAU;0GAhHlH,+tDACkD,IAE9C,qaAMY,IACZ,yHAAwB,KAQxB,8oCAEe,IACX;;;;;;woCAIiB,IACjB,2YAA8B,IAG9B,kVAA0C,IACxC,8YAA6B,IAC7B,qJAA8B,iFAAwB,MACtD,oqCAA2E,IACzE;;;2oBAIyD,IACvD;;;;;;;;;qqDAAuG,6EAAI,MAE7G;;;2oBAI6D,IAC3D;;;;;;;;;qqDAAsG,iFAAQ,MAEhH,k4BAGgD,IAC9C;;;;;;;;;qqDAAwG,wFAAe,MAEzH,s3BAGoB,IAClB;;;;;;;;;qqDAA6E,oFAAW,MAKlG,6oBACkB,IAChB,m3BACc,IACV,yaAAwE,IAUxE,8HAA0B,KAM1B,mJAA4B,KAC1B,mtBAA0B,IAC1B,yaAAqC,IASrC,6HAAyB,KAYzB,mtBAA0B,IAGhC,+1BACkB,IAEhB,qqBAAiB,IACjB,+YAAsF,IACtF,sKAAyC,iFAAc,mDAhH/D,qBAAc,EAAC,wBAAoB,EADnC,YACkD,EAAlD,SAAc,EAAC,SAAoB,GAAC,sBAAa,EADjD,YACkD,EAAd,SAAa,GAExC,yGAAmC,GAAxC,YAMY,EANP,oBAAmC,GAiBxC,oBAAc,EADd,oBAAiB,EADjB,YAEe,EAAf,SAAc,EADd,SAAiB,GAMN,mBAAS,EAAhB,mBAAM,EAJN,aAIiB,EAAV,UAAS,EAAhB,UAAM,GAFN,4GAAuB,GACvB,iEAAwD,EAFxD,+BAAoB,EADpB,aAIiB,EAFjB,UAAuB,EACvB,UAAwD,EAFxD,UAAoB,GAIJ,oBAAa,QAA7B,aAA8B,EAAd,UAAa,GAIrB,oBAAsB,iBAA5B,aAA6B,EAAvB,UAAsB,GAEE,sBAAc,EAA5C,aAA2E,EAA7C,UAAc,GAAC,gCAA6B,EAA1E,aAA2E,EAA9B,UAA6B,GAIxE,oBAAwB,cAHxB,aAIyD,EADzD,UAAwB,GAEtB,aAAuG,GAA7F,4KAA4F,GAAtG,aAAuG,EAA7F,UAA4F,GAKxG,oBAA4B,kBAH5B,aAI6D,EAD7D,UAA4B,GAE1B,aAAsG,GAA5F,2KAA2F,GAArG,aAAsG,EAA5F,UAA2F,GAGvG,mBAAQ,EADR,aAGgD,EAFhD,UAAQ,GAGN,aAAwG,GAA9F,4LAA6F,GAAvG,aAAwG,EAA9F,UAA6F,GAIzG,mBAAQ,EAFR,aAGoB,EADpB,UAAQ,GAEN,aAA6E,GAAnE,kJAAkE,GAA5E,aAA6E,EAAnE,UAAkE,GAMtF,yBAAiB,EADjB,aACkB,EAAlB,UAAiB,GAEf,uBAAa,EADb,aACc,EAAd,UAAa,GACA,2GAAoC,GAA7C,aAAwE,EAA/D,sBAAoC,GAiB9B,uBAAY,EAAzB,aAA0B,EAAb,UAAY,GACtB,yGAAiC,GAApC,aAAqC,EAAlC,sBAAiC,GAqBvB,uBAAY,EAAzB,aAA0B,EAAb,UAAY,GAI/B,yBAAiB,EADjB,aACkB,EAAlB,UAAiB,GAEZ,uBAAa,EAAhB,aAAiB,EAAd,UAAa,GACG,oBAAa,QAAhC,aAAsF,EAAnE,UAAa,mDAhHxC,wIACkD,GAoB1C,4MAIiB,GAMe,oEAAwB,GAGpD,sHAAmC,GAGnC,+GAAyB,GAJzB,gfAIyD,EAHzD,UAAmC,EAGnC,UAAyB,EAJzB,8CAIyD,GACvD,oYAAuG,GAGzG,0HAAuC,GAGvC,mHAA6B,GAJ7B,gfAI6D,EAH7D,UAAuC,EAGvC,UAA6B,EAJ7B,8CAI6D,GAC3D,oYAAsG,GAKxG,kIAA+C,GAH/C,gOAGgD,EAAhD,UAA+C,EAH/C,sBAGgD,GAC9C,oYAAwG,GAElG,8HAA2C,GAAnD,gOAGoB,EAHZ,UAA2C,EAAnD,sBAGoB,GAClB,oYAA6E,GA0B/E,ibAA0B,GAsB1B,ibAA0B,GAGhC,wHACkB,GAIyB,0DAAc;gZAjH/D,6YACkD,iDADxC,mBAAa,QAAvB,YACkD,EADxC,SAAa;;;;;;;;;;;;;;;;ACAvB;AAAA;AAAA;AAAyD;AAIzD;IAcE;QARQ,SAAI,GAAG,KAAK,CAAC;IASjB,CAAC;IAEL,uCAAQ,GAAR;IACA,CAAC;IAEH,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4GCjBO;;;;;;woDAIsB,iDAAtB,oBAAW,EAJX,YAIsB,EAAtB,SAAW,GAAC,kBAAS,EAJrB,YAIsB,EAAV,SAAS,GAHrB,2GAAuB,GACvB,gEAAwD,EACxD,6BAAmB,EAHnB,YAIsB,EAHtB,SAAuB,EACvB,SAAwD,EACxD,SAAmB,2BAHnB,yMAIsB;4GAEpB,0oDAGsB,yBAAtB,oBAAW,EAHX,YAGsB,EAAtB,SAAW,GAAC,kBAAS,EAHrB,YAGsB,EAAV,SAAS;4GAUrB,0TAA8B,+LAAc;4GAE1C,wHAA8B,0MAAwB;4GAMxD,wHAA6B,gFAAkB,4HAAI,2HAAI,wDAA1B,2DAAkB;4GAC/C,yIAA8E,IAA9C,qWAA6C,IAA7E,YAA8E,EAA9C,SAA6C;4GAK7E,+rBAAqD,IAKP,gNAC8C,0HAAI,sNAE9F,yBARqC,sBAAa,EAApD,YAAqD,EAAd,SAAa,mDAKN,waAC8C,GAAI,oaAE9F;wRA3CR,gnCAAyB,IAErB,uaAIsB,IACtB,2HAAwB,KAO1B,isBAA2C,IACzC,2hBAAiB,IACf;;;;;;woCAIiB,IACjB,6YAA8B,IAC9B,kUAAmB,IACjB,gZAA8B,IAKlC,kUAAkB,IAChB,gZAA6B,IAC7B,gZAA8E,IAEhF,25BAAsD,IAEpD,o3BAAU,oFAAW,MACrB,gZAAqD,IAUrD;;wBAAoD;MAAjD;;wBAAgC;MAAnC,4mBAAoD,gFAAO,mDA7CvD,qBAAc,EAAxB,YAAyB,EAAf,SAAc,GAEf,yGAAmC,GAAxC,YAIsB,EAJjB,oBAAmC,GAYb,sBAAa,EAA1C,YAA2C,EAAd,SAAa,GAM/B,kBAAS,EAAhB,kBAAM,EAJN,aAIiB,EAAV,SAAS,EAAhB,SAAM,GAFN,2GAAuB,GACvB,iEAAwD,EAFxD,+BAAoB,EADpB,aAIiB,EAFjB,SAAuB,EACvB,UAAwD,EAFxD,UAAoB,GAIJ,oBAAa,QAA7B,aAA8B,EAAd,UAAa,GAErB,oBAAuB,kBAA7B,aAA8B,EAAxB,UAAuB,GAMzB,oBAAsB,iBAA5B,aAA6B,EAAvB,UAAsB,GACtB,oBAAyB,oBAA/B,aAA8E,EAAxE,UAAyB,GAEf,sBAAc,EAAC,yBAAoB,EAArD,aAAsD,EAApC,UAAc,EAAC,UAAoB,GAEnD,aAAU,GACJ,oBAAa,QAAnB,aAAqD,EAA/C,UAAa,2BAnCzB,wIAAyB,GAgBnB,4MAIiB,GAYnB,wHAAsD,GAEpD,oYAAU,GAWV,giBAAoD;;;;;;;;;;;;;;;;AClD9D;AAAA;AAAA;AAAyD;AASzD;IASE,0CAA0C;IAC1C,wBAAwB;IAExB,gCACY,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAGxB,0BAA0B;IAC3B,CAAC;IAEF,yCAAQ,GAAR;IACA,CAAC;IACM,gDAAe,GAAtB,UAAuB,KAAK;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IAEH,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCyBa,uHAAwF,KAEhF,qoBAAmC,yBAAhB,kBAAe,oBAAlC,YAAmC,EAAhB,SAAe;uGALpD,wHAA8B,KAC1B,+nBAAuB,IACnB,uTAAgB,2IAA8B,IAC5C,gdAAwF,GAAnF,gnBAAiF,sBAAtF,YAAwF,EAAnF,SAAiF,2BAF5F,wIAAuB,GACH,qOAA8B;uGAH1D,sJAAsD,KAClD,mdAA8B,iDAAzB,mBAAwB,OAA7B,YAA8B,EAAzB,SAAwB;6ZAxDjC,sHAAI,mGAAsB,MAuD1B,0YAAsD,iDAAtB,mBAAqB,gBAArD,YAAsD,EAAtB,SAAqB;;;;;;;;;;;;;;;;ACvDrD;AAAA;AAAA;AAAA;AAAkD;AAiBlD,kGAAkG;AACvD;AAM3C;IAyBE,2BAAsB,MAAc;IAClC,wCAAwC;IACjC,KAAgB;QACvB,0BAA0B;QAC1B,kCAAkC;QAClC,0BAA0B;QAC1B,oDAAoD;QACpD,yBAAyB;QACzB,2DAA2D;QAC3D,0DAA0D;QAC1D,gCAAgC;QAChC,+CAA+C;QAC/C,yCAAyC;QACzC,iEAAiE;QACjE,yBAAyB;QACzB,oBAAoB;QACpB,yBAAyB;QACzB,mBAAmB;QACnB,gBAAgB;QAChB,OAAO;QACP,KAAK;QApBe,WAAM,GAAN,MAAM,CAAQ;QAE3B,UAAK,GAAL,KAAK,CAAW;QApBzB,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9B,mCAAmC;QAC5B,SAAI,GAAW,IAAI,KAAK,EAAQ,CAAC;QAChC,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;QAGzB,eAAU,GAAgB,EAAE,CAAC;QAC7B,eAAU,GAAe,EAAE,CAAC;QAE5B,aAAQ,GAAG,KAAK,CAAC;QAEjB,wBAAmB,GAAW,CAAC,CAAC;QAChC,uBAAkB,GAAW,CAAC,CAAC;QA4BpC,mCAAmC;QACnC,iDAAiD;QACjD,4BAA4B;QAC5B,8BAA8B;QAC9B,WAAW;QACX,0BAA0B;QAC1B,sDAAsD;QACtD,2BAA2B;QAC3B,0DAA0D;QAC1D,iCAAiC;QACjC,mDAAmD;QACnD,gDAAgD;QAChD,2CAA2C;QAC3C,mEAAmE;QACnE,2BAA2B;QAC3B,sBAAsB;QACtB,2BAA2B;QAC3B,qBAAqB;QACrB,kBAAkB;QAClB,SAAS;QACT,gCAAgC;QAChC,OAAO;QACP,IAAI;IAEN,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,0BAA0B;IAC1B,oHAAoH;IACpH,uBAAuB;IACvB,uBAAuB;IACvB,mDAAmD;IACnD,yCAAyC;IACzC,4CAA4C;IAC5C,6CAA6C;IAC7C,8CAA8C;IAC9C,yCAAyC;IACzC,eAAe;IACf,qFAAqF;IACrF,wCAAwC;IACxC,iDAAiD;IACjD,4BAA4B;IAC5B,mBAAmB;IACnB,4BAA4B;IAC5B,YAAY;IACZ,oDAAoD;IACpD,YAAY;IACZ,UAAU;IACV,EAAE;IACF,4BAA4B;IAC5B,4BAA4B;IAC5B,QAAQ;IACR,IAAI;IAEJ,+BAA+B;IAC/B,sBAAsB;IACtB,sBAAsB;IACtB,IAAI;IAEJ,qCAAqC;IACrC,uCAAuC;IACvC,gDAAgD;IAChD,IAAI;IACJ,EAAE;IACF,mCAAmC;IACnC,oDAAoD;IACpD,IAAI;IACJ,EAAE;IACF,kCAAkC;IAClC,+CAA+C;IAC/C,IAAI;IACJ,EAAE;IACF,gDAAgD;IAChD,6CAA6C;IAC7C,EAAE;IACF,iFAAiF;IACjF,sBAAsB;IACtB,IAAI;IAEQ,mCAAO,GAAjB,UAAkB,GAAG;QAEnB,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QAE/B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;YACtC,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAC,KAAK,CAAC;YACpC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,gDAAgD;YAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzB;IACH,CAAC;IAEL,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGC/JO,mUAAkD,sMAA6B;uGAHnF,4oBAAoF,IACpF,kJAA2C,KACvC,0TAAgB,+EAAgB,MAChC,0YAAkD,yBAA/B,kBAA8B,mCAAjD,YAAkD,EAA/B,SAA8B,2BAHrD,wIAAoF,GACjF,qHAAuB,GAA1B,YAA2C,EAAxC,SAAuB,GACN,kEAAgB;uGAHtC,0nBAA0C,IACxC,gdAAoF,GAAhD,4XAA+C,oBAAnF,YAAoF,EAAhD,SAA+C,2BADrF,wIAA0C;uGAJ5C,qJAA8B,KAC9B,sHAAI,8FAAY,MAEd,0nBAAU,mMAA0H,2KAAkD,6GAAgC,MAAI,sEAAC,MAC3N,2YAA0C,GAAhC,8XAA+B,oBAAzC,aAA0C,EAAhC,SAA+B,2BADzC,wIAAU;;;;;;;;;;;;;;;;ACHZ;AAAA;AAAA;AAAkD;AAKlD;IAOE,2BAAmB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;IAExC,oCAAQ,GAAR;IACA,CAAC;IAEH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGChBC,gtBAK4B,iDAJ5B,mBAAe,QACf,mBAAqB,WACrB,mBAAyB,aACzB,mBAAmC,kBACnC,mBAA2B,cAL3B,YAK4B,EAJ5B,SAAe,EACf,SAAqB,EACrB,SAAyB,EACzB,SAAmC,EACnC,SAA2B;;;;;;;;;;;;;;;;ACN7B;AAAA;AAAA;AAAA;AAAkD;AAMI;AAEtD;IAmBE,wBACY,KAAgB,EAClB,KAAqB;QADnB,UAAK,GAAL,KAAK,CAAW;QAClB,UAAK,GAAL,KAAK,CAAgB;QAPxB,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,KAAK,CAAC;QAC5B,oBAAe,GAAY,KAAK,CAAC;QACjC,gBAAW,GAAY,KAAK,CAAC;IAKhC,CAAC;IAEL,iCAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,qBAAW;YACvC,IAAI,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,CAAC;gBACpC,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,KAAI,CAAC,KAAK,EAAE;oBACd,IAAI,2EAAU,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;wBAChD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;qBACtB;oBACD,IAAI,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,EAAE;wBACxC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;qBACxB;oBACD,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;wBACvB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;qBACzB;oBACD,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE;wBAC3B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;qBAC7B;iBACF;qBACI;oBACH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;iBACxB;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACxDD;AAAA;AAAA;IAAA;IAsBE,CAAC;IAPC,yCAAS,GAAT;QACE,mCAAmC;QACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;IAC1B,CAAC;IACD,oCAAI,GAAJ;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;IACjC,CAAC;IACH,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvBH;AAAA;AAAA;AAAA;AAAA;AAAoD;AACpD,8CAA8C;AACoB;AAElE;IAAA;IASA,CAAC;IAPG,yCAAS,GAAT,UAAU,KAAY,EAAC,SAAiB,EAAE,OAAe,EAAE,UAAe;QACxE,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,EAAE;YACrB,OAAO,KAAK,CAAC;SAChB;QACF,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,cAAI,IAAI,QAAC,uEAAa,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,IAAI,CAAC,OAAO,CAAC,EAAC,UAAU,CAAC,CAAC,EAAzD,CAAyD,CAAC,CAAC;QACzF,OAAO,KAAK;IACd,CAAC;IACL,4BAAC;AAAD,CAAC;;AAED;IAAA;IAKA,CAAC;IAHG,sCAAS,GAAT,UAAU,IAAU,EAAE,WAAiB;QACrC,OAAO,CAAC,oEAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IACxC,CAAC;IACL,yBAAC;AAAD,CAAC;;AAKD,8BAA8B;AAC9B,yDAAyD;AACzD,sDAAsD;AACtD,qCAAqC;AACrC,4BAA4B;AAC5B,YAAY;AACZ,kGAAkG;AAClG,qBAAqB;AACrB,QAAQ;AACR,IAAI;AAEJ,gCAAgC;AAChC,2DAA2D;AAC3D,8BAA8B;AAC9B,iCAAiC;AACjC,iCAAiC;AACjC,QAAQ;AACR,IAAI;AAEJ,mDAAmD;AACnD,6BAA6B;AAC7B,6BAA6B;AAC7B,8CAA8C;AAC9C,wBAAwB;AACxB,2BAA2B;AAC3B,4BAA4B;AAC5B,IAAI;AAEJ,2BAA2B;AAC3B,sDAAsD;AACtD,8BAA8B;AAC9B,iCAAiC;AACjC,iCAAiC;AACjC,QAAQ;AACR,IAAI;AACJ,2DAA2D;AAC3D,0BAA0B;AAC1B,oFAAoF;AACpF,IAAI;;;;;;;;;;;;;AC/DJ;AAAA;AAAA;AAAA;AAAA;AAAoD;AAEpD;IAAA;IAeA,CAAC;IAVC,qCAAS,GAAT,UAAU,IAAY,EAAE,MAAU;QAChC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE;YACxB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;SACvC;QACC,OAAO,IAAI,CAAC;IAEhB,CAAC;IACH,wBAAC;AAAD,CAAC;;AAED;IAAA;IAUA,CAAC;IALC,uCAAS,GAAT,UAAU,IAAY,EAAE,MAAU;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC;QAC7C,OAAO,IAAI,CAAC;IAEd,CAAC;IACH,0BAAC;AAAD,CAAC;;AAED;IAAA;IAQA,CAAC;IAHC,sCAAS,GAAT,UAAU,IAAY,EAAE,UAAkB;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IACH,yBAAC;AAAD,CAAC","file":"features-browse-browse-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BrowseComponent } from \"./browse.component\";\n\nimport { CalendarComponent } from './pages/calendar/calendar.component';\nimport { EventComponent } from \"./pages/event/event.component\";\nimport { ChannelsComponent } from \"./pages/channels/channels.component\";\n\nconst browseRoutes: Routes = [\n  { path: '', component:  BrowseComponent,\n    children: [\n      { path: '', redirectTo: 'events', pathMatch: 'full' },\n      { path: 'event/:id', component: EventComponent },\n      { path: 'events', component: CalendarComponent },\n      { path: 'channels', component: ChannelsComponent }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(browseRoutes)],\n  exports: [RouterModule]\n})\nexport class BrowseRoutingModule { }\nexport const browseRoutingComponents = [\n  BrowseComponent,\n  CalendarComponent,\n  ChannelsComponent,\n  EventComponent\n]\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cs-browse',\n  template: '<router-outlet></router-outlet>'\n})\nexport class BrowseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowseRoutingModule, browseRoutingComponents } from './browse-routing.module';\n\nimport { EventDetailComponent } from \"./components/event-detail/event-detail.component\";\nimport { EventOverviewComponent } from \"./components/event-overview/event-overview.component\";\n\nimport { SharedModule } from \"@shared/shared.module\";\n\n@NgModule({\n  declarations: [\n    browseRoutingComponents,\n    EventDetailComponent,\n    EventOverviewComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowseRoutingModule,\n    SharedModule\n  ],\n  exports:[\n  ]\n})\nexport class BrowseModule { }\n","<mat-card *ngIf=\"event\"\nfxLayout=\"row\" fxLayout.xs=\"column\" fxFlex=\"grow\">\n  <!-- IMAGE -->\n    <img *ngIf=\"event.image; else elseBlock\" mat-card-image\n    class=\"event-image\"\n    src=\"{{ event.image }}\"\n    default=\"/../../../../assets/img/cs-sofaherz-dunkel.png\"\n    alt=\"{{ event.name }}, Quelle: {{ event.image }}\"\n    fxHide.lt-sm\n    fxFlex=\"30\">\n    <ng-template #elseBlock>\n      <img mat-card-image\n      class=\"event-image\"\n      src=\"/../../../../assets/img/cs-sofaherz-dunkel.png\"\n      fxHide.lt-sm\n      fxFlex=\"30\">\n    </ng-template>\n  <!-- IMAGE END -->\n    <mat-card-header\n    fxFlex.gt-sm=\"30\"\n    fxFlex.sm=\"50\">\n        <img mat-card-avatar\n        class=\"event-avatar\"\n        src=\"{{ event.image }}\"\n        default=\"/../../../../assets/img/cs-sofaherz-dunkel.png\"\n        fxHide fxShow.xs>\n        <mat-card-title *ngIf=\"event\">\n          <h1>{{event.name | uppercase}}</h1>\n        </mat-card-title>\n        <mat-card-subtitle class=\"event-subtitle\">\n          <span *ngIf=\"event.subtitle\">{{event.subtitle}} | </span>\n          <span class=\"event-organizer\">{{event.organizer.name}}</span>\n          <div class=\"event-attributes\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <a mat-icon-button\n            class=\"attribute-{{ hasInfoLink }}\"\n            aria-label=\"Informationen\"\n            [disabled]=\"hasInfoLink\"\n            href=\"{{event.infoLink}}\" target=\"_blank\" rel=\"noopener\">\n              <mat-icon matTooltip=\"{{ hasInfoLink ? 'weitere Informationen' : 'keine weiteren Infos hinterlegt' }}\">link</mat-icon>\n            </a>\n            <a mat-icon-button\n            class=\"attribute-{{ hasDonationLink }}\"\n            aria-label=\"Spende\"\n            [disabled]=\"hasDonationLink\"\n            href=\"{{event.donationLink}}\" target=\"_blank\" rel=\"noopener\">\n              <mat-icon matTooltip=\"{{ hasDonationLink ? 'hier kannst Du spenden' : 'kein Spendenlink gefunden' }}\">favorite</mat-icon>\n            </a>\n            <button mat-icon-button\n            disabled\n            aria-label=\"Verfügbarkeit\"\n            class=\"attribute-{{ event.availableLiveOnly }}\">\n              <mat-icon matTooltip=\"{{ event.availableLiveOnly ? 'nur live verfügbar' : 'längerfristig verfügbar' }}\">hourglass_empty</mat-icon>\n            </button>\n            <button class=\"attribute-{{ !event.freeOfCharge }}\"\n            mat-icon-button\n            disabled\n            aria-label=\"Kosten\">\n              <mat-icon matTooltip=\"{{ event.freeOfCharge ? 'kostenlos' : 'kostet was' }}\">euro_symbol</mat-icon>\n            </button>\n          </div>\n        </mat-card-subtitle>\n    </mat-card-header>\n    <div class=\"event-information\"\n    fxLayout=\"column\">\n      <mat-card-content\n      fxFlex=\"grow\">\n          <section *ngIf=\"isLongText; else isShortText\" class=\"event-description\">\n            <p [innerHTML]=\"(show) ? event.description : event.description | slice:0:500 | attachString:'...':''\">\n            </p>\n            <p class=\"align-right\">\n              <a (click)=\"show = !show\" class=\"show-more\">\n                <span>{{ show ? 'weniger anzeigen': 'weiterlesen' }}</span>\n                <mat-icon aria-hidden=\"false\" aria-label=\"show more\">{{ show ? 'keyboard_arrow_up': 'keyboard_arrow_down' }}</mat-icon>\n              </a>\n            </p>\n          </section>\n          <ng-template #isShortText>\n            <section class=\"event-description\">\n              <p [innerHTML]=\"event.description\">\n              </p>\n            </section>\n          </ng-template>\n          <section class=\"event-time\">\n            <mat-divider inset=\"true\"></mat-divider>\n            <p *ngIf=\"isOneDay; else isSomeDays\">\n              {{event.start | date:'fullDate':'de'}}<br>\n              <mat-icon matTooltip=\"Beginn\"\n              aria-label=\"Beginn\">play_arrow\n              </mat-icon>{{event.start | date:'shortTime':'de'}}\n              <mat-icon matTooltip=\"Ende\"\n              aria-label=\"Ende\">stop\n              </mat-icon>{{event.end | date:'shortTime':'de'}}\n            </p>\n            <ng-template #isSomeDays>\n              <p>\n                <mat-icon matTooltip=\"Beginn\"\n                aria-label=\"Beginn\"\n                matTooltipPosition=\"above\">play_arrow</mat-icon>\n                {{event.start | date:'EE dd.MM., HH:mm':'de'}}<br>\n                <mat-icon matTooltip=\"Ende\"\n                aria-label=\"Ende\"\n                matTooltipPosition=\"below\">stop</mat-icon>\n                {{event.end | date:'EE dd.MM., HH:mm':'de'}}\n              </p>\n            </ng-template>\n            <mat-divider inset=\"true\"></mat-divider>\n          </section>\n      </mat-card-content>\n      <mat-card-actions\n      fxLayout=\"column\">\n          <!-- TODO jetzt live icon -->\n        <p fxFlex=\"grow\"></p>\n        <a mat-flat-button *ngIf=\"event\" href=\"{{event.link}}\" target=\"_blank\" rel=\"noopener\">ZUM STREAM<mat-icon>play_arrow</mat-icon></a>\n        <span itemprop=\"location\" class=\"hidden\">{{event.link}}</span>\n      </mat-card-actions>\n    </div>\n</mat-card>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Happening } from '@core/models/happening.model';\n\n@Component({\n  selector: '.cs-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.css']\n})\nexport class EventDetailComponent implements OnInit {\n  private show = false;\n\n  @Input() event: Happening;\n  @Input() isOneDay: boolean;\n  @Input() isLongText: boolean;\n  @Input() hasDonationLink: boolean;\n  @Input() hasInfoLink: boolean;\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- <mat-card class=\"event-card\">\n    <mat-card-title>{{event.name}}</mat-card-title>\n    <mat-card-subtitle>{{event.start | date:'shortTime':'de'}}-{{event.end | date:'shortTime':'de'}} Uhr | von {{event.organizerName}}</mat-card-subtitle>\n</mat-card> -->\n<!-- <article *ngFor=\"let event of events\" fxLayout=\"column\"> -->\n    <mat-card fxLayout=\"row\">\n      <!-- <img mat-card-image fxFlex=\"20\"> -->\n        <img *ngIf=\"event.image; else elseBlock\" mat-card-image\n        src=\"{{ event.image }}\"\n        default=\"/../../../../assets/img/cs-sofaherz-dunkel.png\"\n        class=\"event-image\"\n        fxFlex=\"30\" fxHide.xs>\n        <ng-template #elseBlock>\n          <img mat-card-image\n          class=\"event-image\"\n          src=\"/../../../../assets/img/cs-sofaherz-dunkel.png\"\n          fxFlex=\"30\" fxHide.xs>\n        </ng-template>\n\n      <section class=\"event-infos\" fxFlex=\"grow\">\n        <mat-card-header>\n          <img mat-card-avatar\n          class=\"event-avatar\"\n          src=\"{{ event.image }}\"\n          default=\"/../../../../assets/img/cs-sofaherz-dunkel.png\"\n          fxHide fxShow.xs>\n          <mat-card-title *ngIf=\"event\">{{event.name}}</mat-card-title>\n          <mat-card-subtitle>\n            <span *ngIf=\"event.organizer\">{{event.organizer.name}}</span>\n            <!-- <span *ngIf=\"event\">{{event.start | date:'shortTime':'de'}} bis {{event.end | date:'shortTime':'de'}} Uhr</span> -->\n            <!-- <span *ngIf=\"event.category\"> | {{event.category.name}}</span> -->\n          </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <span *ngIf=\"event.subtitle\">{{event.subtitle}}<br><br></span>\n          <span *ngIf=\"event.description\" [innerHTML]=\"event.description | excerpt:180\"></span>\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\">\n          <!-- TODO jetzt live icon -->\n          <mat-icon>access_time</mat-icon>\n          <span *ngIf=\"event\" class=\"event-time\" fxFlex=\"grow\">\n            <!-- <span *ngIf=\"event.start == event.end \">\n              {{event.start | date:'shortDate':'de'}}, <br>\n              {{event.start | date:'shortTime':'de'}} bis {{event.end | date:'shortTime':'de'}} Uhr\n            </span>\n            <span *ngIf=\"event.start != event.end \"> -->\n              von {{event.start | date:'shortDate':'de'}}, {{event.start | date:'shortTime':'de'}} Uhr<br>\n              bis {{event.end | date:'shortDate':'de'}}, {{event.end | date:'shortTime':'de'}} Uhr\n            <!-- </span> -->\n          </span>\n          <a (click)=\"navigateToEvent(event)\" mat-flat-button>DETAILS</a>\n        </mat-card-actions>\n      </section>\n    </mat-card>\n<!-- </article> -->\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { DataStore } from '@core/services/data.service';\n\nimport { Organizer } from '@core/models/organizer.model';\nimport { Happening } from '@core/models/happening.model';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'cs-event-overview',\n  templateUrl: './event-overview.component.html',\n  styleUrls: ['./event-overview.component.css']\n})\nexport class EventOverviewComponent implements OnInit {\n\n  @Input() event: Happening;\n\n  // protected organizers: Organizer[] = [];\n  // protected date: Date;\n\n  constructor(\n    protected router: Router,\n    // protected store: DataStore\n  ) {\n    // this.date = new Date();\n   }\n\n  ngOnInit() {\n  }\n  public navigateToEvent(event) {\n    this.router.navigate(['browse/event', event.id]);\n  }\n\n}\n","<h2>Veranstaltungskalender</h2>\n\n<!-- <div class=\"filter\">\n\n    <div class=\"example-container\">\n          <mat-form-field *ngIf=\"store.categories$\">\n            <mat-label>Kategorie</mat-label>\n            <mat-select [(ngModel)]=\"selectedCategoryId\">\n              <mat-option>alle Kategorien</mat-option>\n              <mat-option *ngFor=\"let category of store.categories$ | async\" [value]=\"category.id\">{{category.name}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field *ngIf=\"store.organizers$\">\n              <mat-label>Veranstalter:in</mat-label>\n              <mat-select [(ngModel)]=\"selectedOrganizerId\">\n                <mat-option>alle Veranstalter:innen</mat-option>\n                <mat-option *ngFor=\"let organizer of store.organizers$ | async\" [value]=\"organizer.id\">{{organizer.name}}</mat-option>\n              </mat-select>\n          </mat-form-field> -->\n\n          <!-- <mat-form-field>\n              <mat-label>Veranstalter:in</mat-label>\n              <input type=\"text\" matInput [(ngModel)]=\"selectedOrganizerId\">\n                <mat-autocomplete>\n                  <mat-option *ngFor=\"let organizer of organizers\" [value]=\"organizer.name\" [value]=\"option\">\n                    {{ organizer.name }}\n                  </mat-option>\n                </mat-autocomplete> -->\n                <!-- <mat-option>alle Veranstalter:innen</mat-option> -->\n          <!-- </mat-form-field> -->\n\n\n            <!--form class=\"example-form\">\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\"\n                       placeholder=\"Pick one\"\n                       aria-label=\"Number\"\n                       matInput\n                       [formControl]=\"myControl\"\n                       [matAutocomplete]=\"auto\">\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                  <mat-option *ngFor=\"let organizer of organizers | async\" [value]=\"organizer.name\">\n                    {{organizer.name}}\n                  </mat-option>\n                </mat-autocomplete>\n              </mat-form-field>\n            </form-->\n\n\n          <!-- <button mat-button class=\"filterButton\" (click)=\"getFilteredEvents()\">filtern</button>\n    </div> -->\n\n\n<!-- </div> -->\n<div class=\"calendar-container\" *ngIf=\"store.events$\">\n    <div *ngFor=\"let day of week\">\n        <mat-card class=\"date\">\n            <mat-card-title>{{day | date:'fullDate':'de'}}</mat-card-title>\n              <div *ngFor=\"let event of store.events$ | async | filterByDateRange:'start':'end':day\" >\n                  <!-- <div *ngIf=\"day.getTime() == event.parsedDate.getTime() \"> -->\n                      <cs-event-overview [event]=\"event\"></cs-event-overview>\n                  <!-- </div> -->\n              </div>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport eventsJson from 'src/dummy/arrays.json';\n// import { Week } from 'src/models/week';\nimport { Router } from '@angular/router';\n\n// import { EventService } from 'src/services/event.service';\n\n\nimport { Happening } from '@core/models/happening.model';\nimport { Organizer } from '@core/models/organizer.model';\nimport { Category } from '@core/models/category.model';\n\n\nimport { DataStore } from '@core/services/data.service';\n\n\n\n// import { CategoryPreviewComponent } from '../home/category-preview/category-preview.component';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'cs-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n\n  myControl = new FormControl();\n  // public events: OrgaEvent[] = [];\n  public week: Date[] = new Array<Date>();\n  private date: Date = new Date();\n  filteredOptions: Observable<Organizer[]>;\n\n  public organizers: Organizer[] = [];\n  public categories: Category[] = [];\n\n  public isLoaded = false;\n\n  public selectedOrganizerId: number = 0;\n  public selectedCategoryId: number = 0;\n\n  private filterDate: Date;\n  private filterCategory;\n  private filterOrganizerName;\n\n  constructor(protected router: Router,\n    // protected eventService: EventService,\n    public store: DataStore) {\n    // this.date = new Date();\n    // this.date.setHours(0, 0, 0, 0);\n    // console.log(this.date);\n    // this.dataStore.getOrganizers().subscribe((o) => {\n    //   this.organizers = o;\n    //   // let neutralOrganizer : Organizer = new Organizer();\n    //   // neutralOrganizer.name = 'alle Veranstalter:innen';\n    //   // neutralOrganizer.id = 0;\n    //   // this.organizers.push(neutralOrganizer);\n    //   this.organizers.sort(function(a, b){\n    //     var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n    //     if (nameA < nameB)\n    //         return -1\n    //     if (nameA > nameB)\n    //         return 1\n    //     return 0;\n    //   })\n    // })\n\n    // if (this.dataStore.categories) {\n    //   this.categories = this.dataStore.categories;\n    //   console.log('schonda');\n    //   this.getFilteredEvents();\n    // } else {\n    //   console.log('keine');\n    //   this.dataStore.getCategories().subscribe((c) => {\n    //     this.categories = c;\n    //     // let neutralCategory : Category = new Category();\n    //     // neutralCategory.id = 0;\n    //     // neutralCategory.name = 'alle Kategorien';\n    //     // this.categories.push(neutralCategory);\n    //     this.categories.sort(function(a, b){\n    //       var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n    //       if (nameA < nameB)\n    //           return -1\n    //       if (nameA > nameB)\n    //           return 1\n    //       return 0;\n    //     })\n    //     this.getFilteredEvents();\n    //   })\n    // }\n\n  }\n\n  ngOnInit() {\n    this.getWeek(this.date);\n  }\n\n  // protected getEvents() {\n  //   this.eventService.getEventsByFilterParams(this.selectedOrganizerId, this.selectedCategoryId).subscribe((c) => {\n  //     let events = [];\n  //     this.events = c;\n  //     var bar = new Promise((resolve, reject) => {\n  //       c.forEach((e, index, array) => {\n  //         e.parsedDate = new Date(e.start);\n  //         e.parsedDate.setHours(0, 0, 0, 0);\n  //         // if (e.parsedDate > this.date ) {\n  //         //   console.log(e.parsedDate)\n  //         // }\n  //         let organizer = this.dataStore.organizers.find(x => x.id === e.organizer);\n  //         if (organizer != undefined) {\n  //           e['organizerName'] = organizer.name;\n  //           events.push(e);\n  //         } else {\n  //           events.push(e);\n  //         }\n  //         if (index === array.length -1) resolve();\n  //       });\n  //     });\n  //\n  //     this.events = events;\n  //     this.isLoaded = true;\n  //   });\n  // }\n\n  // public getFilteredEvents() {\n  //   this.events = [];\n  //   this.getEvents();\n  // }\n\n  // protected navigateToEvent(event) {\n  //   let dateN = new Date(event.start);\n  //   this.router.navigate(['/event', event.id]);\n  // }\n  //\n  // protected setOrganizer($event) {\n  //   this.filterOrganizerName = $event.target.value;\n  // }\n  //\n  // protected setCategory($event) {\n  //   this.filterCategory = $event.target.value;\n  // }\n  //\n  // private _filter(value: string): Organizer[] {\n  //   const filterValue = value.toLowerCase();\n  //\n  //   let organizer = this.organizers.filter(organizer => organizer.name = value);\n  //   return organizer;\n  // }\n\n    protected getWeek(day){\n\n      var dayBase = new Date();\n      dayBase.setDate(day.getDate());\n\n      for (let index = 0; index < 7; index++) {\n        var dayTemp = new Date();\n        dayTemp.setDate(day.getDate()+index)\n        dayTemp.setHours(0, 0, 0, 0);\n        // console.log('day ' + index + ': ' + dayTemp);\n        this.week.push(dayTemp);\n      }\n    }\n\n}\n","<div class=\"channelcontainer\">\n<h2>Kulturkanäle</h2>\n\n  <mat-card>Hier findet ihr Plattformen, die Kulturveranstaltungen streamen. Gerne tragen wir noch weitere ein. Schreibt uns einfach: <a href=\"mailto:kulturkanaele@culturestreams.org\">kulturkanaele@culturestreams.org</a>.</mat-card>\n  <mat-card *ngIf=\"store.channels$ | async\">\n    <mat-card class=\"channel-container\" *ngFor=\"let channel of store.channels$ | async\">\n    <a href=\"{{channel.link}}\" target=\"_blank\">\n        <mat-card-title>{{channel.name}}</mat-card-title>\n        <mat-card-subtitle *ngIf=\"channel.organizer.name\">by {{channel.organizer.name}}</mat-card-subtitle>\n    </a>\n    </mat-card>\n  </mat-card>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { DataStore } from '@core/services/data.service';\nimport { Channel } from '@core/models/channel.model';\n\n@Component({\n  selector: 'cs-channels',\n  templateUrl: './channels.component.html',\n  styleUrls: ['./channels.component.css']\n})\nexport class ChannelsComponent implements OnInit {\n\n  constructor(public store: DataStore) { }\n\n  ngOnInit() {\n  }\n\n}\n","\n  <main class=\"cs-event-detail\"\n  [event]=\"event\"\n  [isOneDay]=\"isOneDay\"\n  [isLongText]=\"isLongText\"\n  [hasDonationLink]=\"hasDonationLink\"\n  [hasInfoLink]=\"hasInfoLink\">\n  </main>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { DataStore } from \"@core/services/data.service\";\nimport { Happening } from '@core/models/happening.model';\n\nimport { isSameDate } from \"@shared/utils/date.utils\";\n\n@Component({\n  selector: 'cs-event',\n  template: `\n  <main class=\"cs-event-detail\"\n  [event]=\"event\"\n  [isOneDay]=\"isOneDay\"\n  [isLongText]=\"isLongText\"\n  [hasDonationLink]=\"hasDonationLink\"\n  [hasInfoLink]=\"hasInfoLink\">\n  </main>`\n})\nexport class EventComponent implements OnInit {\n\n  public event : Happening;\n  public isOneDay: boolean = false;\n  public isLongText: boolean = false;\n  public hasDonationLink: boolean = false;\n  public hasInfoLink: boolean = false;\n\n  constructor(\n    protected store: DataStore,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(queryParams => {\n      let id = queryParams.get(\"id\");\n      this.store.readEvent(+id).subscribe((e) => {\n        this.event = e[0];\n        if (this.event) {\n          if (isSameDate(this.event.start, this.event.end)) {\n            this.isOneDay = true;\n          }\n          if (this.event.description.length >= 500) {\n            this.isLongText = true;\n          }\n          if (this.event.infoLink) {\n            this.hasInfoLink = true;\n          }\n          if (this.event.donationLink) {\n            this.hasDonationLink = true;\n          }\n        }\n        else {\n          console.log('no event')\n        }\n      })\n    })\n  }\n}\n","import {Directive, Input, HostBinding} from '@angular/core'\n@Directive({\n    selector: 'img[default]',\n    host: {\n      '(error)':'updateUrl()',\n      '(load)': 'load()',\n      '[src]':'src'\n     }\n  })\n\n export class ImagePreloadDirective {\n    @Input() src:string;\n    @Input() default:string;\n    @Input() class:string;\n    @HostBinding('class') newClassName\n\n    updateUrl() {\n      // console.log('update image url');\n      this.src = this.default;\n    }\n    load(){\n      this.newClassName = this.class;\n    }\n  }\n","import { Pipe, PipeTransform } from '@angular/core';\n// import { DatePipe } from '@angular/common';\nimport { isInDateRange, isSameDate } from \"./../utils/date.utils\";\n\n@Pipe({name: 'filterByDateRange'})\nexport class FilterByDateRangePipe implements PipeTransform {\n    transform(items: any[],startAttr: string, endAttr: string, filterDate:Date): any {\n      if (!items || !filterDate) {\n            return items;\n        }\n       items = items.filter(item => (isInDateRange(item[startAttr],item[endAttr],filterDate)));\n      return items\n    }\n}\n\n@Pipe({name: 'isNotSameDate'})\nexport class FilterSameDatePipe implements PipeTransform {\n    transform(date: Date, compareWith: Date): boolean {\n      return !isSameDate(date, compareWith);\n    }\n}\n\n\n\n\n// @Pipe({name: 'dateExists'})\n// export class DateExistsPipe implements PipeTransform {\n//     transform(items: any[], filterDate:Date): any {\n//       if (!items || !filterDate) {\n//             return items;\n//         }\n//        items = items.filter(item => (isInDateRange(item[startAttr],item[endAttr],filterDate)));\n//       return items\n//     }\n// }\n\n// @Pipe({name: 'compareDates'})\n// export class compareDatesPipe implements PipeTransform {\n//     transform(d1:Date,d2) {\n//       d1.setHours(0, 0, 0, 0);\n//       d2.setHours(0, 0, 0, 0);\n//     }\n// }\n\n// export function compareDates(d1:Date, d2:Date) {\n//   d1.setHours(0, 0, 0, 0);\n//   d2.setHours(0, 0, 0, 0);\n//   let same = d1.getTime() === d2.getTime();\n//   if (same) return 0;\n//   if (d1 > d2) return 1;\n//   if (d1 < d2) return -1;\n// }\n\n// @Pipe({name: 'isToday'})\n// export class isTodayPipe implements PipeTransform {\n//     transform(d1:Date,d2) {\n//       d1.setHours(0, 0, 0, 0);\n//       d2.setHours(0, 0, 0, 0);\n//     }\n// }\n// export function isNow(start: Date, end: Date): boolean {\n//   let now = new Date();\n//   return ((start.getTime() <= now.getTime()) && (end.getTime() > now.getTime()));\n// }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'excerpt',\n  pure: false\n})\nexport class TextExcerptFilter implements PipeTransform {\n  transform(text: string, length:any ): any {\n    if (!text || !length) {\n      return text;\n    }\n    if (text.length > length) {\n      return text.substr(0, length) + '...';\n    }\n      return text;\n\n  }\n}\n\n@Pipe({\n  name: 'linebreak',\n  pure: false\n})\nexport class TextLinebreakFilter implements PipeTransform {\n  transform(text: string, length:any ): any {\n    text.replace(new RegExp('\\n', 'g'), \"<br />\")\n    return text;\n\n  }\n}\n\n@Pipe({\n  name: 'attachString',\n  pure: false\n})\nexport class AttachStringFilter implements PipeTransform {\n  transform(text: string, attachText: string ): string {\n    return text.concat(attachText);\n  }\n}\n"],"sourceRoot":""}